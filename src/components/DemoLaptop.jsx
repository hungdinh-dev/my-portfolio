/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: CG Robot (https://sketchfab.com/cgrobot)
License: SKETCHFAB Standard (https://sketchfab.com/licenses)
Source: https://sketchfab.com/3d-models/windows-10-laptop-6734c1552bcd4b1b8bab405b8cd23773
Title: Windows 10 Laptop
*/

import { useRef, useEffect } from 'react';
import { useGLTF, useAnimations, useVideoTexture } from '@react-three/drei';
import gsap from 'gsap';
import { useGSAP } from '@gsap/react';

export function DemoLaptop(props) {
    const group = useRef();
    const { nodes, materials, animations } = useGLTF('/models/laptop.glb');
    const { actions } = useAnimations(animations, group);

    const txt = useVideoTexture(props.texture ? props.texture : '/textures/project/project1.mp4');

    useEffect(() => {
        if (txt) {
            txt.flipY = false;
        }
    }, [txt]);

    useGSAP(() => {
        gsap.from(group.current.rotation, {
            y: Math.PI,
            duration: 1,
            ease: 'power3.out',
        });
    }, [txt]);

    return (
        <group ref={group} {...props} dispose={null}>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_4.geometry}
                material={materials['Material.001']}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_5.geometry}
                material={materials['Material.002']}
            >
                <meshBasicMaterial map={txt} toneMapped={false} />
            </mesh>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_6.geometry}
                material={materials['Material.003']}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_7.geometry}
                material={materials['Material.004']}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_8.geometry}
                material={materials['Material.006']}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_9.geometry}
                material={materials['Material.007']}
            />
        </group>
    )
}

useGLTF.preload('/laptop.glb')
